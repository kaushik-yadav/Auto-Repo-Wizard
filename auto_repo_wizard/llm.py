# Imports the genai module from the google package.
from google import genai
# Imports read_file_content and write_clean_response functions from the file_manager module in the auto_repo_wizard package.
from auto_repo_wizard.file_manager import read_file_content, write_clean_response
# Imports the GEMINI_API_KEY variable from the config module in the auto_repo_wizard package.
from auto_repo_wizard.config import GEMINI_API_KEY

# Initializes a genai client using the provided GEMINI_API_KEY.
client = genai.Client(api_key=GEMINI_API_KEY)


# Generates explanation(inline comments) for all code files in a directory
# Defines a function named explain_code that takes a list of Python file paths as input.
def explain_code(python_files):
    # Iterates through each file path in the provided list of Python files.
    for file_path in python_files:
        # Reads the content of the current file using the read_file_content function.
        content = read_file_content(file_path)

        # Generates content using the genai client, providing a prompt to rewrite the code with inline comments.
        response = client.models.generate_content(
            # Specifies the model to be used for content generation.
            model="gemini-2.0-flash",
            # Defines the content to be sent to the model for processing, which includes the Python code to be explained.
            contents=f"""
            Rewrite the following Python code so that each line is preceded by an inline comment 
            (that should be on top of the code line) that explains only that line. 
            Do not add any extra code, functions, or examples. Only comment the given code. 
            If a comment already exists but is not descriptive enough, then make it better.

            Code:
            {content}
            """,
        )

        # Writes the cleaned response in a file
        # Writes the cleaned response generated by the model to the specified file path.
        write_clean_response(file_path, response)

    # Prints a message indicating that the code explanation process is complete.
    print("-- Code explanation process completed")